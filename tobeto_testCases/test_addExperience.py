# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions as ec
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

import test_validLogin as login
import constants.globalConstants as gc

class TestAddExperience():
  def setup_method(self):
    # as a precondition user should be logged in
    valid_login = login.TestvalidLogin() 
    valid_login.setup_method()
    valid_login.test_validLogin()
    self.driver = valid_login.getDriver()
    
    self.driver.delete_all_cookies
    self.vars = {}
  
  def teardown_method(self):
    self.driver.quit()
  
  def test_addExperience(self):
    
      # go to page "Deneyimlerim"
      WebDriverWait(self.driver, 30).until(ec.invisibility_of_element_located(((By.CSS_SELECTOR, ".toast-body"))))

      user_profile_button = WebDriverWait(self.driver, 30).until(ec.presence_of_element_located((By.XPATH, gc.USER_PROFILE_BUTTON_XPATH)))
      user_profile_button.click()

      user_profile_info_button = WebDriverWait(self.driver, 30).until(ec.visibility_of_element_located((By.XPATH, gc.USER_PROFILE_INFO_BUTTON_XPATH)))
      user_profile_info_button.click()

      is_on_profile_page = WebDriverWait(self.driver, 30).until(ec.visibility_of_element_located((By.XPATH, gc.PAGE_TITLE_XPATH)))
      assert is_on_profile_page.text == "Kişisel Bilgilerim"

      user_experiences_button = WebDriverWait(self.driver, 30).until(ec.visibility_of_element_located((By.XPATH, gc.USER_EXPERINCES_PAGE_LINK_XPATH)))
      user_experiences_button.click()
      
      # Actions on "Deneyimlerim" page
      #for i in range(0,100): # to test adding 100 experience
      corporationName =WebDriverWait(self.driver, 30).until(ec.visibility_of_element_located((By.XPATH, gc.CORPORATION_NAME_INPUT_XPATH)))
      corporationName.send_keys("testKubra")
      position = WebDriverWait(self.driver, 30).until(ec.visibility_of_element_located((By.XPATH, gc.POSITION_INPUT_XPATH)))
      position.send_keys("testKubra")
      sector = WebDriverWait(self.driver, 30).until(ec.visibility_of_element_located((By.XPATH, gc.SECTOR_INPUT_XPATH)))
      sector.send_keys("testKubra")
      select_country_dropdown= WebDriverWait(self.driver, 30).until(ec.visibility_of_element_located((By.XPATH, gc.COUNTRY_DROPDOWN_XPATH)))
      select_option = select_country_dropdown.find_element(By.XPATH, "//option[. = 'İstanbul']")
      select_option.click()
        
      start_calender = WebDriverWait(self.driver, 30).until(ec.visibility_of_element_located((By.XPATH, gc.START_CALENDAR_XPATH)))
      start_calender.click()
      
      start_date = WebDriverWait(self.driver, 30).until(ec.visibility_of_element_located((By.CSS_SELECTOR, ".react-datepicker__day--020")))
      start_date.click()
      
      finish_calender = WebDriverWait(self.driver, 30).until(ec.visibility_of_element_located((By.XPATH, gc.FINISH_CALENDAR_XPATH)))
      finish_calender.click()
        
      finish_date = WebDriverWait(self.driver, 30).until(ec.visibility_of_element_located((By.CSS_SELECTOR, ".react-datepicker__day--026")))
      finish_date.click()

      save_button = WebDriverWait(self.driver, 30).until(ec.visibility_of_element_located((By.CSS_SELECTOR, ".btn-primary")))
      save_button.click()

      toast_message_text = WebDriverWait(self.driver, 5).until(ec.presence_of_element_located((By.CSS_SELECTOR, ".toast-body")))
      assert toast_message_text.text == "• Deneyim eklendi."
        
  
