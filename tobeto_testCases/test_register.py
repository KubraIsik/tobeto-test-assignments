# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions as ec
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from random import randint

class Testregister():
  def setup_method(self):
    self.driver = webdriver.Chrome()
    self.driver.get("https://tobeto.com/kayit-ol")
    self.driver.maximize_window()
    self.driver.delete_all_cookies()
    self.vars = {}
  
  def teardown_method(self):
    self.driver.quit()

  def create_rand_user():
     
        RandNum= randint(0,1000)
    
        data= [{'registerUserName' : 'testName'+str(RandNum),
                'registerSurName' : 'testSurName'+str(RandNum),
                'registerMail' : 'testmail'+str(RandNum)+'@gmail.com',
                'registerPassword': 1234567,
                'registerPhoneNum' : 5321111111
              }]
    
        return data

  #@pytest.mark.skip() 
  @pytest.mark.parametrize("user_data",create_rand_user())
  def test_register(self,user_data):
  
    register_firstName = WebDriverWait(self.driver, 5).until(ec.visibility_of_element_located((By.NAME, "firstName")))
    register_firstName.send_keys(user_data["registerUserName"])
    register_lastName = WebDriverWait(self.driver, 5).until(ec.visibility_of_element_located((By.NAME, "lastName")))
    register_lastName.send_keys(user_data["registerSurName"])
    register_email = WebDriverWait(self.driver, 5).until(ec.visibility_of_element_located((By.NAME, "email")))
    register_email.send_keys(user_data["registerMail"])
    register_password = WebDriverWait(self.driver, 5).until(ec.visibility_of_element_located((By.NAME, "password")))
    register_password.send_keys(user_data["registerPassword"])
    register_password_again = WebDriverWait(self.driver, 5).until(ec.visibility_of_element_located((By.NAME, "passwordAgain")))
    register_password_again.send_keys(user_data["registerPassword"])
    
    register_button1 = WebDriverWait(self.driver, 10).until(ec.element_to_be_clickable((By.XPATH, "//button[contains(.,'Kayıt Ol')]")))
    self.driver.execute_script("arguments[0].click();", register_button1)
    
    contact_permission= WebDriverWait(self.driver, 5).until(ec.presence_of_element_located((By.NAME, "contact")))
    contact_permission.click()
    membershipContrat = WebDriverWait(self.driver, 5).until(ec.presence_of_element_located((By.NAME, "membershipContrat")))
    membershipContrat.click()
    emailConfirmation =WebDriverWait(self.driver, 5).until(ec.presence_of_element_located((By.NAME, "emailConfirmation")))
    emailConfirmation.click()
    phoneConfirmation = WebDriverWait(self.driver, 5).until(ec.presence_of_element_located((By.NAME, "phoneConfirmation")))
    phoneConfirmation.click()
    phoneNumberCountry = WebDriverWait(self.driver, 5).until(ec.presence_of_element_located((By.NAME, "phoneNumberCountry")))
    phoneNumberCountry.click()
    register_phoneNumber = WebDriverWait(self.driver, 5).until(ec.presence_of_element_located((By.ID, "phoneNumber")))
    register_phoneNumber.send_keys(user_data["registerPhoneNum"])
    

    iframe= WebDriverWait(self.driver, 5).until(ec.presence_of_element_located((By.XPATH,"//iframe[@title='reCAPTCHA']")))
    self.driver.switch_to.frame(iframe)
    captcha=WebDriverWait(self.driver, 5).until(ec.presence_of_element_located((By.XPATH,"//span[@id=\'recaptcha-anchor\']/div")))
    captcha.click()
    self.driver.switch_to.default_content()
    
    register_buton2 = WebDriverWait(self.driver, 5).until(ec.element_to_be_clickable((By.CSS_SELECTOR, ".btn-yes")))
    self.driver.execute_script("arguments[0].click();", register_buton2)
    
    register_alert = WebDriverWait(self.driver, 5).until(ec.presence_of_element_located((By.CSS_SELECTOR, ".success-payment-text")))
    text = register_alert.text
    assert register_alert.text == "Tobeto Platform'a kaydınız başarıyla gerçekleşti.\nGiriş yapabilmek için e-posta adresinize iletilen doğrulama linkine tıklayarak hesabınızı aktifleştirin."

  
